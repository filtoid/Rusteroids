order

0. explain events system, why we can't query interface
The event loop passed in by the operating system updates us based on things that happen. This means that we get a message when a key is pressed and when it is released. In a game, in particular, we actuallly want to know if a key is being held down rather than when it is pressed, we can demonstrate this by modifying our event loop to show when a key is pressed and when it is released.
0.5 print key down event, to show which key is pressed 
And we can see that when we press a key we get a message that it has been pressed and when it is released again. These messages can overlap, for instance if i push the letter a and then the letter b then release a and then release b. 
sadly this doesn't help us with a game because we want to update things like direction and locatioon on every loop of the game loop. we could create variables for every key we want to track and set them to true when they are pressed and false all of the other times, however this would quickly get boring to be creating 26 different variables, plus other symbols too. 
1. create hashmap
and so instead we will use a hashmap. a hashmap is a data structure designed to use one type as a key and one type as a value. you can then pass that value in and get the value of the key. If we set our key to be a string (representing the key being pressed) and the value to be a boolean, true when it is pressed and false when it is not, then we can have a single object wich will look after the current keyboard state for us. 
enter the key manager hashnap. 

2. copy utils functions
For now we will simply copy the content of the utils file which contains a function to update a key when the key is pressed, one to set it to false when it is released and one to get the current state of a key. I will cover the working of thhse functions in a different video for anyone interested, but if you just want a working key manager then feel free to copy and paste this whereever you like, 

3. add in event loop functions
modifying our existin gevent handdlers we can call the key down and key up utils functions. .

4. print letter through console
now we can check if a letter is pressed and print that 
5. adapt render
6. demonstrate
